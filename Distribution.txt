import requests
import pandas as pd
import json

# Constants
OPENAI_API_KEY = "your-api-key-here"
OPENAI_API_URL = "https://api.openai.com/v1/chat/completions"
MODEL = "gpt-4"  # or "gpt-3.5-turbo"

# Construct taxonomy block
taxonomy_block = ""
for _, row in taxonomy_df.iterrows():
    l1 = str(row['level_1']).strip()
    l2 = str(row['level_2']).strip()
    l3 = str(row['level_3']).strip() if pd.notna(row['level_3']) else ""
    ex = str(row['examples_for_level_4']).strip() if pd.notna(row['examples_for_level_4']) else ""

    line = f"- L1: {l1} | L2: {l2}"
    if l3:
        line += f" | L3: {l3}"
    if ex:
        line += f" | Example: {ex}"
    taxonomy_block += line + "\n"

# Function to send API call using requests
def map_l6_to_taxonomy(name, desc):
    prompt = f"""
You are helping map circular economy items to a taxonomy.

Given this L6 item:
Name: {name}
Description: {desc}

Match it to the most relevant taxonomy paths (you may return more than one if applicable) from the list below:

{taxonomy_block}

Respond in the following format:
- Mapping 1: L1: ___ | L2: ___ | L3: ___
- Mapping 2: ...
Reasoning: Briefly explain why each mapping fits.
    """.strip()

    headers = {
        "Authorization": f"Bearer {OPENAI_API_KEY}",
        "Content-Type": "application/json"
    }

    payload = {
        "model": MODEL,
        "messages": [{"role": "user", "content": prompt}],
        "temperature": 0.3,
        "max_tokens": 400
    }

    try:
        response = requests.post(OPENAI_API_URL, headers=headers, data=json.dumps(payload))
        response.raise_for_status()
        content = response.json()
        return content["choices"][0]["message"]["content"]
    except Exception as e:
        return f"Error: {str(e)}"

# Apply to each L6 entry
l6_df['Taxonomy Mapping'] = l6_df.apply(
    lambda row: map_l6_to_taxonomy(row['L6_NAME'], row['L6_DESCRIPTION']),
    axis=1
)
