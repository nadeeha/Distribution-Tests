import pandas as pd
import plotly.graph_objects as go
from plotly.subplots import make_subplots

# Simulated dfs_dict
dfs_dict = {
    'xaix_gt': pd.DataFrame({
        'entity_proper_name': ['Apple', 'Microsoft', 'Nvidia', 'AMD', 'Intel', 'Broadcom', 'Cisco', 'Salesforce', 'Adobe', 'Oracle', 'HP'],
        'weight': [0.3, 0.25, 0.2, 0.1, 0.05, 0.03, 0.02, 0.015, 0.01, 0.01, 0.01],
        'ETF-Index Name': ['XAIX Global Tech'] * 11
    }),
    'lock_ln': pd.DataFrame({
        'entity_proper_name': ['Lockheed', 'Raytheon', 'Northrop', 'BAE Systems', 'Thales', 'General Dynamics', 'L3 Harris', 'Leonardo', 'Elbit', 'Saab', 'Kongsberg'],
        'weight': [0.4, 0.2, 0.15, 0.1, 0.05, 0.03, 0.025, 0.015, 0.01, 0.01, 0.01],
        'ETF-Index Name': ['LOCK Defense Leaders'] * 11
    })
}

# Create subplot figure
fig = make_subplots(
    rows=2, cols=1,
    subplot_titles=["Top 10 Holdings by Weight", "Weight Distribution"],
    vertical_spacing=0.2
)

# Traces and buttons
buttons = []
for i, (etf_key, df) in enumerate(dfs_dict.items()):
    df = df.drop_duplicates(subset='entity_proper_name')
    df_sorted = df.sort_values('weight', ascending=False)
    top10 = df_sorted.head(10)
    index_name = df['ETF-Index Name'].iloc[0]

    # Top 10 bar (row 1)
    bar = go.Bar(
        x=top10['entity_proper_name'],
        y=top10['weight'],
        text=(top10['weight'] * 100).round(1).astype(str) + '%',
        name=f'Top 10 - {index_name}',
        textposition='outside',
        visible=(i == 0),
        xaxis='x1',
        yaxis='y1'
    )

    # Histogram (row 2)
    hist = go.Histogram(
        x=df_sorted['weight'],
        nbinsx=10,
        name=f'Distribution - {index_name}',
        visible=(i == 0),
        xaxis='x2',
        yaxis='y2'
    )

    fig.add_trace(bar, row=1, col=1)
    fig.add_trace(hist, row=2, col=1)

    # Visibility toggles
    visibility = [False] * (len(dfs_dict) * 2)
    visibility[2 * i] = True
    visibility[2 * i + 1] = True

    buttons.append({
        'label': index_name,
        'method': 'update',
        'args': [
            {'visible': visibility},
            {'title': f"ETF Analysis: {index_name}"}
        ]
    })

# Layout
fig.update_layout(
    height=700,
    showlegend=False,
    title=f"ETF Analysis: {list(dfs_dict.values())[0]['ETF-Index Name'].iloc[0]}",
    updatemenus=[{
        'buttons': buttons,
        'direction': 'down',
        'showactive': True,
        'x': 0.5,
        'xanchor': 'center',
        'y': 1.15,
        'yanchor': 'top'
    }]
)

fig.update_yaxes(title_text="Weight", row=1, col=1, tickformat=".0%")
fig.update_yaxes(title_text="Count", row=2, col=1)
fig.update_xaxes(title_text="Company", row=1, col=1)
fig.update_xaxes(title_text="Weight", row=2, col=1, tickformat=".0%")

fig.show()
