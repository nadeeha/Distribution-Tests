import pandas as pd
import numpy as np
import plotly.graph_objects as go

# Assuming df is your ETF dataframe with columns: ETF-Index Name, SECTOR, weight, market_cap

# Metric 2a – Portfolio Sector Weight
portfolio_wt = df.groupby(['ETF-Index Name', 'SECTOR'])['weight'].sum()
portfolio_wt = portfolio_wt.groupby(level=0).apply(lambda x: x / x.sum()).unstack(fill_value=0)

# Metric 2b – Market Cap Sector Weight
cap = df.drop_duplicates(subset=['ETF-Index Name', 'ISIN'])  # Deduplicate ISIN-level market cap
cap_sector = cap.groupby(['ETF-Index Name', 'SECTOR'])['market_cap'].sum()
cap_sector = cap_sector.groupby(level=0).apply(lambda x: x / x.sum()).unstack(fill_value=0)

# Metric 2c – Active Multiple
active_multiple = portfolio_wt / cap_sector
active_multiple = active_multiple.replace([np.inf, -np.inf], np.nan).fillna(0)

def make_heatmap(data, title, colorscale):
    return go.Figure(data=go.Heatmap(
        z=data.values,
        x=data.columns,
        y=data.index,
        colorscale=colorscale,
        text=np.round(data.values, 2),
        texttemplate="%{text}",
        hoverinfo="x+y+z"
    )).update_layout(title=title, xaxis_title="SECTOR", yaxis_title="ETF")

# Generate figures
fig2a = make_heatmap(portfolio_wt, "Metric 2a: Portfolio Sector Weight", "Blues")
fig2b = make_heatmap(cap_sector, "Metric 2b: Market Cap Sector Weight", "Greens")
fig2c = make_heatmap(active_multiple, "Metric 2c: Active Multiple", "Oranges")

# Display or export
fig2a.show()
fig2b.show()
fig2c.show()
