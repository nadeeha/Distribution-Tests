import plotly.graph_objects as go
import pandas as pd

# Prepare dropdown options
etf_options = df["ETF-Index Name"].dropna().unique().tolist()
etf_options.insert(0, "All ETFs")  # Add "All" option

# Prepare box plot traces for each ETF
traces = []
buttons = []

# Generate trace for "All ETFs"
df_all = df.dropna(subset=["gics_sector_name", "weight"])
traces.append(go.Box(
    x=df_all["gics_sector_name"],
    y=df_all["weight"],
    name="All ETFs",
    boxpoints="all",
    visible=True  # only this one visible initially
))
buttons.append(dict(label="All ETFs", method="update", args=[{"visible": [True] + [False]*(len(etf_options)-1)}]))

# Generate traces for each individual ETF
for etf in etf_options[1:]:
    df_etf = df[df["ETF-Index Name"] == etf]
    traces.append(go.Box(
        x=df_etf["gics_sector_name"],
        y=df_etf["weight"],
        name=etf,
        boxpoints="all",
        visible=False
    ))
    # Set visibility mask
    visibility = [False] * len(etf_options)
    visibility[etf_options.index(etf)] = True
    buttons.append(dict(label=etf, method="update", args=[{"visible": visibility}]))

# Create figure with dropdown menu
fig = go.Figure(data=traces)
fig.update_layout(
    updatemenus=[{
        "buttons": buttons,
        "direction": "down",
        "showactive": True,
        "x": 0.5,
        "xanchor": "center",
        "y": 1.15,
        "yanchor": "top"
    }],
    title="Weight Distribution per GICS Sector by ETF",
    xaxis_title="GICS Sector",
    yaxis_title="Weight",
    height=700
)

fig.show()
