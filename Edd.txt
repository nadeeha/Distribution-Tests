import pandas as pd
import plotly.express as px

# Example dfs_dict â€“ replace this with your actual ETF data
dfs_dict = {
    'xaix_gt': pd.DataFrame({
        'ISIN': ['A1', 'A1', 'A2'],
        'l3_name': ['Software', 'Consumer Electronics', 'Software'],
        'weight': [0.4, 0.4, 0.35],
        'l6_revenue_pct': [0.6, 0.4, 1.0]
    }),
    'lock_ln': pd.DataFrame({
        'ISIN': ['B1', 'B2', 'B2'],
        'l3_name': ['Aerospace', 'Aerospace', 'Cybersecurity'],
        'weight': [0.5, 0.3, 0.3],
        'l6_revenue_pct': [1.0, 0.5, 0.5]
    })
}

# Step 1: Calculate weighted exposure
records = []
for etf, df in dfs_dict.items():
    df = df.dropna(subset=['l3_name', 'weight', 'l6_revenue_pct'])
    df['weight'] = pd.to_numeric(df['weight'], errors='coerce')
    df['l6_revenue_pct'] = pd.to_numeric(df['l6_revenue_pct'], errors='coerce')
    df['exposure'] = df['weight'] * df['l6_revenue_pct']
    
    grouped = df.groupby('l3_name', as_index=False)['exposure'].sum()
    grouped['ETF'] = etf
    records.append(grouped)

# Step 2: Combine and normalize
combined_df = pd.concat(records, ignore_index=True)
combined_df['normalized_exposure'] = combined_df.groupby('ETF')['exposure'].transform(lambda x: x / x.sum())

# Step 3: Add text labels (e.g., "Software (25.3%)")
combined_df['label'] = combined_df['l3_name'] + ' (' + (combined_df['normalized_exposure'] * 100).round(1).astype(str) + '%)'

# Step 4: Create the 100% stacked bar chart
fig = px.bar(
    combined_df,
    x='ETF',
    y='normalized_exposure',
    color='l3_name',
    text='label',
    title='Sector Composition of ETFs (100% Stacked)',
    labels={'normalized_exposure': 'Exposure (%)', 'l3_name': 'Sector'}
)

fig.update_traces(textposition='inside')
fig.update_layout(
    yaxis_tickformat=".0%",
    bargap=0.2,
    uniformtext_minsize=8,
    uniformtext_mode='hide'
)

fig.show()
