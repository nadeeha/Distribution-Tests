def build_validation_prompt(row, theme_definitions):
    theme = row['Assigned_Theme']
    theme_def = theme_definitions.get(theme, "No definition provided")

    prompt = f"""
You are a domain expert in ESG and thematic investing. Your task is to validate whether a revenue stream reasonably fits into a given investment theme.

Even if the connection is loose, conceptual, or economic, that’s acceptable. Be generous in interpretation.

Theme: {theme}
Definition: {theme_def}

Revenue Stream Info:
L1: {row['L1']}
L2: {row['L2']}
L3: {row['L3']}
L4: {row['L4']}
L5: {row['L5']}
L6: {row['L6']}
Description: {row['Description']}

Return only one of the following:
- "Valid Theme Match"
- "Possibly Related – Needs Review"
- "Invalid Match"
""".strip()

    return prompt



from tqdm import tqdm
import openai

openai.api_key = "YOUR_OPENAI_KEY"

def validate_theme(row, theme_definitions):
    prompt = build_validation_prompt(row, theme_definitions)
    
    response = openai.ChatCompletion.create(
        model="gpt-4",
        messages=[{"role": "user", "content": prompt}],
        temperature=0
    )
    
    return response.choices[0].message["content"].strip()

# Add progress bar and apply
tqdm.pandas()
df['Validation_Result'] = df.progress_apply(lambda row: validate_theme(row, theme_definitions), axis=1)
