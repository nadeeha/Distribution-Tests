import os
from openpyxl import load_workbook
from openpyxl.drawing.image import Image
import pandas as pd

# Step 1: Load the Excel file and read the attribute column
excel_file_path = 'example.xlsx'  # Path to your Excel file
graphs_folder = 'graphs_folder_path'  # Folder where graph images are stored (replace with your path)
df = pd.read_excel(excel_file_path)  # Load the Excel sheet into a DataFrame

# Step 2: Insert the graph into the Excel sheet for each row based on the attribute value
def insert_graph_to_excel(excel_path, graph_image_path, row, column_name="Graph"):
    # Load the existing Excel workbook
    workbook = load_workbook(excel_path)
    sheet = workbook.active

    # Add a new column header for the graph column if it doesn't already exist
    if "Graph" not in [cell.value for cell in sheet[1]]:
        sheet.cell(row=1, column=sheet.max_column + 1, value=column_name)

    # Load the graph image
    img = Image(graph_image_path)

    # Insert the graph image into the specified cell in the new column
    img.anchor = sheet.cell(row=row, column=sheet.max_column).coordinate
    sheet.add_image(img)

    # Save the modified Excel workbook
    workbook.save(excel_path)

# Step 3: Loop through each row in the 'attribute' column, find the corresponding graph image, and insert it into Excel
for index, row in df.iterrows():
    attribute_value = row['attribute']  # Get the attribute value for this row

    # Generate the expected file name for the corresponding graph
    graph_image_path = os.path.join(graphs_folder, f'graph_{attribute_value}.png')

    # Check if the graph image exists for this attribute value
    if os.path.exists(graph_image_path):
        # Insert the graph image into the Excel file
        insert_graph_to_excel(excel_file_path, graph_image_path, row=index + 2)
    else:
        print(f"Graph image not found for attribute value {attribute_value}")

print("Graphs successfully inserted into the Excel file.")
