import matplotlib.pyplot as plt
import io
import base64
import os
import pandas as pd

def generate_plots_with_matplotlib(
    original_data, imputed_data, columns, task, output_html="plots_matplotlib.html", section_heading=None
):
    # Initialize HTML if it doesn't exist
    if not os.path.exists(output_html):
        with open(output_html, "w") as html_file:
            html_file.write("<html><head><title>Plots</title></head><body>\n")
    
    # Add a section heading if provided
    if section_heading:
        with open(output_html, "a") as html_file:
            html_file.write(f"<h1>{section_heading}</h1>\n")

    for col in columns:
        # Create Matplotlib figure and axes
        fig, axes = plt.subplots(1, 3, figsize=(15, 5))  # Histogram, Boxplot, KDE

        # Histogram Before and After
        axes[0].hist(original_data[col].dropna(), bins=20, alpha=0.7, label="Before", color="blue")
        axes[0].hist(imputed_data[col].dropna(), bins=20, alpha=0.7, label="After", color="green")
        axes[0].set_title(f"{col} Histogram")
        axes[0].legend()

        # Boxplot Before and After
        axes[1].boxplot([original_data[col].dropna(), imputed_data[col].dropna()], labels=["Before", "After"])
        axes[1].set_title(f"{col} Boxplot")

        # KDE Before and After
        if not original_data[col].dropna().empty:
            original_data[col].dropna().plot.kde(ax=axes[2], label="Before", color="blue")
        if not imputed_data[col].dropna().empty:
            imputed_data[col].dropna().plot.kde(ax=axes[2], label="After", color="green")
        axes[2].set_title(f"{col} KDE")
        axes[2].legend()

        # Save plot as PNG in memory
        buffer = io.BytesIO()
        plt.savefig(buffer, format="png", bbox_inches="tight")
        buffer.seek(0)
        encoded_image = base64.b64encode(buffer.read()).decode("utf-8")
        buffer.close()
        plt.close()

        # Embed the image into the HTML
        html_image = f'<img src="data:image/png;base64,{encoded_image}" alt="{col} plots"/>'
        with open(output_html, "a") as html_file:
            html_file.write(f"<h3>{col} Plots</h3>\n")
            html_file.write(html_image)
            html_file.write("<hr>")  # Add a separator between plots

    # Close the HTML structure
    with open(output_html, "a") as html_file:
        html_file.write("</body></html>\n")


# Example data
original_df = pd.DataFrame({
    "Column1": [1, 2, 3, 4, 5, 6, None],
    "Column2": [7, 8, 9, 10, 11, None, None],
})
imputed_df = pd.DataFrame({
    "Column1": [1, 2, 3, 4, 5, 6, 7],
    "Column2": [7, 8, 9, 10, 11, 12, 13],
})

# Generate plots
generate_plots_with_matplotlib(
    original_data=original_df,
    imputed_data=imputed_df,
    columns=["Column1", "Column2"],
    task="Imputation",
    output_html="plots_matplotlib.html",
    section_heading="Batch 1"
)
